{"version":3,"file":"admin/meta-box-image-upload/index.js","mappings":"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A;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://mxsfwn-npm-handler/./src/admin/meta-box-image-upload/components/metaboxes/ImageUploader.js","webpack://mxsfwn-npm-handler/./src/admin/meta-box-image-upload/index.js","webpack://mxsfwn-npm-handler/webpack/bootstrap","webpack://mxsfwn-npm-handler/webpack/runtime/chunk loaded","webpack://mxsfwn-npm-handler/webpack/runtime/compat get default export","webpack://mxsfwn-npm-handler/webpack/runtime/define property getters","webpack://mxsfwn-npm-handler/webpack/runtime/hasOwnProperty shorthand","webpack://mxsfwn-npm-handler/webpack/runtime/make namespace object","webpack://mxsfwn-npm-handler/webpack/runtime/node module decorator","webpack://mxsfwn-npm-handler/webpack/runtime/jsonp chunk loading","webpack://mxsfwn-npm-handler/webpack/before-startup","webpack://mxsfwn-npm-handler/webpack/startup","webpack://mxsfwn-npm-handler/webpack/after-startup"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst deleteMetaBoxImage = async (postId, attributes) => {\r\n\r\n    /**\r\n     * Server callback is here \\includes\\Features\\API\\Routes\\DeletePostMetaImageRoute.php\r\n     * */\r\n    return await axios.post(`/wp-json/wpp-generator/v1/post-id/${postId}/delete/`, {\r\n        attributes\r\n    }, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-WP-Nonce': mxsfwnAdminLocalize.nonce\r\n        }\r\n    })\r\n}\r\n\r\nconst updatePostMetaImage = async (postId, attributes = {}) => {\r\n\r\n    /**\r\n     * Server callback is here \\includes\\Features\\API\\Routes\\UpdatePostMetaImageRoute.php\r\n     * */\r\n    return await axios.post(`/wp-json/wpp-generator/v1/post-id/${postId}`, {\r\n        attributes,\r\n    }, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-WP-Nonce': mxsfwnAdminLocalize.nonce\r\n        }\r\n    })\r\n}\r\n\r\nconst getPostMetaImage = async (postId, postMetaKey) => {\r\n\r\n    const encodedMetaKey = encodeURIComponent(postMetaKey);\r\n\r\n    /**\r\n     * Server callback is here \\includes\\Features\\API\\Routes\\GetPostMetaImageRoute.php\r\n     * */\r\n    return await axios.get(`/wp-json/wpp-generator/v1/post-id/${postId}/`, {\r\n        params: {\r\n            post_id: postId,\r\n            postMetaKey: encodedMetaKey\r\n        },\r\n        headers: {\r\n            'X-WP-Nonce': mxsfwnAdminLocalize.nonce\r\n        }\r\n    })\r\n}\r\n\r\nconst ImageUploader = ({ postMetaKey, postId, postMetaValue }) => {\r\n\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const [imageId, setImageId] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    // Get save post meta\r\n    const getSavedImage = () => {\r\n\r\n        if (!postMetaValue) return\r\n\r\n        getPostMetaImage(postId, postMetaKey)\r\n            .then(res => {\r\n\r\n                if (res.status === 200) {\r\n\r\n                    const imageData = res.data;\r\n\r\n                    if (imageData?.imageId && imageData?.imageUrl) {\r\n\r\n                        setImageId(parseInt(imageData.imageId))\r\n\r\n                        setImageUrl(imageData.imageUrl)\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n\r\n                // console.log(error, error)\r\n            })\r\n    }\r\n\r\n    // Check if the image saved\r\n    useEffect(() => {\r\n\r\n        getSavedImage()\r\n    }, [])\r\n\r\n    // Choose Image\r\n    let frame = null\r\n\r\n    const openFrame = (e) => {\r\n        e.preventDefault()\r\n\r\n        setError('')\r\n\r\n        if (frame) {\r\n            frame.open()\r\n            return\r\n        }\r\n\r\n        frame = wp.media.frames.metaBoxUploadImage = wp.media({\r\n\r\n            title: 'Choose image',\r\n\r\n            library: {\r\n                type: 'image'\r\n            },\r\n\r\n            button: {\r\n                text: 'Upload'\r\n            },\r\n\r\n            multyple: false\r\n        })\r\n\r\n        frame.on('select', function () {\r\n\r\n            const attachment = frame.state().get('selection').first()\r\n\r\n            const imageId = attachment.id\r\n\r\n            const attributes = {\r\n                imageId,\r\n                postMetaKey\r\n            }\r\n\r\n            updatePostMetaImage(postId, attributes)\r\n                .then(res => {\r\n\r\n                    if (res.status === 200) {\r\n\r\n                        setImageId(imageId)\r\n\r\n                        const imageUrl = res.data.imageUrl\r\n\r\n                        setImageUrl(imageUrl)\r\n                    } else {\r\n\r\n                        setError('Failed to upload image. Please try again.')\r\n                    }\r\n                })\r\n                .catch(\r\n                    error => {\r\n\r\n                        const message = error?.response?.data?.message ? error.response.data.message : error.message\r\n\r\n                        setError('Error: ' + message)\r\n                    }\r\n                )\r\n        })\r\n\r\n        frame.open()\r\n    }\r\n\r\n    const removeImage = (e) => {\r\n        e.preventDefault()\r\n\r\n        const attributes = {\r\n            postMetaKey\r\n        }\r\n\r\n        deleteMetaBoxImage(postId, attributes)\r\n            .then(res => {\r\n\r\n                if (res.status === 200) {\r\n\r\n                    setImageUrl('')\r\n                    setImageId('')\r\n\r\n                } else {\r\n\r\n                    setError('Failed to delete image. Please try again.')\r\n                }\r\n            })\r\n            .catch(\r\n                error => {\r\n\r\n                    const message = error?.response?.data?.message ? error.response.data.message : error.message\r\n\r\n                    setError('Error: ' + message)\r\n                }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"mx-image-uploader-react\">\r\n\r\n            {error && (\r\n                <div className=\"error-message\" style={{ color: 'red', marginBottom: '10px' }}>\r\n                    {error}\r\n                </div>\r\n            )}\r\n\r\n            <button\r\n                onClick={openFrame}\r\n                style={{ display: imageUrl ? 'none' : 'block' }}\r\n            >\r\n                Choose Image\r\n            </button>\r\n            {imageUrl && (\r\n                <>\r\n                    <img\r\n                        src={imageUrl}\r\n                        alt=\"Uploaded\"\r\n                        style={{ display: 'block', maxWidth: '100%' }}\r\n                    />\r\n                    <button\r\n                        onClick={removeImage}\r\n                        style={{ display: 'block' }}\r\n                    >\r\n                        Remove Image\r\n                    </button>\r\n                    <input\r\n                        type=\"hidden\"\r\n                        value={imageId}\r\n                        name={`image-id-${imageId}`}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUploader","import React, { useState } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport ImageUploader from './components/metaboxes/ImageUploader'\r\n\r\n// Function to render React components\r\nconst renderImageUploaders = () => {\r\n\r\n  const uploaderElements = document.querySelectorAll('.mx-image-uploader')\r\n\r\n  uploaderElements.forEach((element, index) => {\r\n    \r\n    const root = createRoot(element)\r\n    const postMetaKey = element.getAttribute('data-post-meta-key')\r\n    const postMetaValue = element.getAttribute('data-post-meta-value')\r\n    const postId = element.getAttribute('data-post-id')\r\n    root.render(\r\n      <ImageUploader\r\n        postMetaKey={postMetaKey}\r\n        postMetaValue={postMetaValue}\r\n        postId={postId}\r\n      />\r\n    )\r\n  })\r\n}\r\n\r\n// Call the render function when the DOM is fully loaded\r\ndocument.addEventListener('DOMContentLoaded', renderImageUploaders)","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"admin/meta-box-image-upload\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmxsfwn_npm_handler\"] = self[\"webpackChunkmxsfwn_npm_handler\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"dependencies/vendors\"], () => (__webpack_require__(\"./src/admin/meta-box-image-upload/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","React","useState","useEffect","axios","deleteMetaBoxImage","_ref","_callee","postId","attributes","_callee$","_context","post","concat","headers","mxsfwnAdminLocalize","nonce","_x","_x2","updatePostMetaImage","_ref2","_callee2","_args2","_callee2$","_context2","undefined","_x3","getPostMetaImage","_ref3","_callee3","postMetaKey","encodedMetaKey","_callee3$","_context3","encodeURIComponent","get","params","post_id","_x4","_x5","ImageUploader","_ref4","postMetaValue","_useState","_useState2","_slicedToArray","imageUrl","setImageUrl","_useState3","_useState4","imageId","setImageId","_useState5","_useState6","error","setError","getSavedImage","res","status","imageData","data","parseInt","frame","openFrame","preventDefault","open","wp","media","frames","metaBoxUploadImage","title","library","button","text","multyple","on","attachment","state","first","id","_error$response","message","response","removeImage","_error$response2","createElement","className","style","color","marginBottom","onClick","display","Fragment","src","alt","maxWidth","createRoot","renderImageUploaders","uploaderElements","document","querySelectorAll","element","index","root","getAttribute","render","addEventListener"],"sourceRoot":""}